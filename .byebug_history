exit
a
exit
a
exit
req
req.headers
reg.headers
req.body
exit
eexit
req
c
exit
id
connection.post("media/1187096446395313964_224650346/comments?text=hey")
connection.post("media/1187096446395313964_224650346/comments?'text=hey'" )
connection.post("media/1187096446395313964_224650346/comments?'text'='hey'" )
connection.post('media/1187096446395313964_224650346/comments?text=hey' )
connection.post('media/1187096446395313964_224650346/comments', {text: comment} )
id
connection
connect
exit
id
comment
exit
c
exit
req
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
@grams.first.id
@grams
exit
gram[:id]
gram.keys
gram
exit
@grams.first
exit
params[:comment]
[:comment]
params
exit
followers.data.first[:username]
followers.data.first
followers
exit
followers.data.first
followers.data
followers
exit
auth['omniauth.auth'].extra
auth['omniauth.auth'].info
auth['omniauth.auth'].keys
auth['omniauth.auth']
auth.keys
auth.ekys
auth
exit
comments
exit
comments.first[:text]
comments
exit
comments.data.first[:text]
comments.data.first[:text}
comments.data.first
comments.data.count
comments.data
comments
exit
JSON.parse(response.body)['data']
JSON.parse(response.body)[:data]
JSON.parse(response.body)
JSON.parse(response.body).first
JSON.parse(response.body).count
JSON.parse(response.body)
response
JSON.parse(response)
JSON.parse(response).keys
JSON.parse(response).first
response.first
response.keys
response
response.keys
response.count
response
exit
gram[:id]
gram.keys
gram[:images].keys
gram[:images][:standard_resolution]
gram
exit
@grams.first.comments
@grams
exit
@grams.first
exit
grams.first
grams.count
exit
eixt
grams.first.image_url
grams.first
grams.count
grams
exit
gram[:likes]
gram.keys
gram[:caption][:text]
gram[:caption]
gram[:images][:standard_resolution][:url]
gram[:images][::standard_resolution][:url]
gram[:images]
gram.images
gram.keys
gram
exit
a.first
exit
a.count
a.first
exit
response.count
response.first
exit
response.data.countexit
response.data.count
response.data.first
response.data.keys
response.data
response
exit
response
exit
grams
exit
response
exit
a
exit
user
exit
user
exit
user
exit
user
exit
user
exit
comment.text
comment
exit
@golden_grams.first.comments[:comms].first.text
exit
@golden_grams.first.comments[:comms].first.text
@golden_grams.first.comments[:comms].first
@golden_grams.first.comments[:comms].first.comment.text 
@golden_grams.first.comments[:comms].each {|comment| comment.text }
@golden_grams.first.comments[:comms].first
@golden_grams.first.comments[:comms]
@golden_grams.first.comments
@golden_grams.first
@golden_grams
exit
@golden_grams.first.comments[:comms].first
@golden_grams.first.comments[:comms]
@golden_grams.first.comments[;comms]
@golden_grams.first.comments
@golden_grams.first
exit
@golden_grams.first
@golden_grams
exit
gram.comments[:comms]
exit
gram.comments[:comms]
exit
gram.id
comments(gram.id).count
comments(gram.id)
gram.comments[:comms]
exit
comments(gram.id).first.text
comments(gram.id).first
comments(gram.id)
gram.comments[:comms].first.text
gram.comments[:comms].text
gram.comments[:comms]
exit
comments(gram.id)
gram[:id]
gram.id
exit
gram.id
gram
exit
JSON.parse(response.body)["data"]
JSON.parse(response.body)["meta"]
JSON.parse(response.body)
response.body
response
exit
@golden_grams.third.comments
@golden_grams.second.comments
@golden_grams.first.comments
@golden_grams
exit
@golden_grams.first
exit
next
exit
gram[:id]
gram[]:id
exit
gram[:comments][:comments] = comments(gram[:id])
gram
exit
@golden_grams
exit
@response
exit
@response.headers
@response.body
@response
exit
@response
exit
@response
exit
next
exit
next
response
exit
JSON.parse(response.body, symbolize_names: true)
JSON.parse(response.body)
JSON.parse(response.bosy)
JSON.parse(response)
response
exit
